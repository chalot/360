/*******************************************************************************
 *                                                                             *
 * Copyright (c) 2011 Texas Instruments Incorporated - http://www.ti.com/      *
 *                        ALL RIGHTS RESERVED                                  *
 *                                                                             *
 ******************************************************************************/

/*
 *   @file  ammu.cfg
 *
 *   @brief 
 */

function init()
{
    var Program = xdc.useModule('xdc.cfg.Program');
   
    if (Program.global.coreName.match("VIDEO-M3"))
    {
        var AMMU = xdc.useModule('ti.sysbios.hal.ammu.AMMU');

        AMMU.configureAmmu = true;

        var Cache = xdc.useModule('ti.sysbios.hal.unicache.Cache');
        Cache.enableCache = true;


        /*********************** Small Pages *************************/
        /* smallPages[0] & smallPages[1] are auto-programmed by h/w */
        /* Overwrite smallPage[1] so that 16K is covered. H/w reset value configures
        * only 4K */
        AMMU.smallPages[0].pageEnabled = AMMU.Enable_YES;
        AMMU.smallPages[0].logicalAddress = 0x00000000;
        AMMU.smallPages[0].translatedAddress = 0x55020000;
        AMMU.smallPages[0].translationEnabled = AMMU.Enable_YES;
        AMMU.smallPages[0].size = AMMU.Small_16K;
        AMMU.smallPages[0].volatileQualifier = AMMU.Volatile_FOLLOW;  
        AMMU.smallPages[0].L1_cacheable = AMMU.CachePolicy_CACHEABLE;

        /* Overwrite smallPage[1] so that 16K is covered. H/w reset value configures
        * only 4K */
        AMMU.smallPages[1].pageEnabled = AMMU.Enable_YES;
        AMMU.smallPages[1].logicalAddress = 0x40000000;
        AMMU.smallPages[1].translatedAddress = 0x55080000;
        AMMU.smallPages[1].translationEnabled = AMMU.Enable_YES;
        AMMU.smallPages[1].size = AMMU.Small_16K;
        AMMU.smallPages[1].volatileQualifier = AMMU.Volatile_FOLLOW;  


        /*********************** Medium Pages *************************/
        /* L2 space is mapped to virtual address 0 */
        /* config medium page[0] to map 256K VA 0x00000000 to PA 0x55020000 - L2 SRAM */
        /* Make it L1 cacheable */
        AMMU.mediumPages[0].pageEnabled = AMMU.Enable_YES;
        AMMU.mediumPages[0].logicalAddress = 0x00300000;
        AMMU.mediumPages[0].translatedAddress = 0x40300000;
        AMMU.mediumPages[0].translationEnabled = AMMU.Enable_YES;
        AMMU.mediumPages[0].size = AMMU.Medium_256K;
        AMMU.mediumPages[0].L1_cacheable = AMMU.CachePolicy_CACHEABLE;
        AMMU.mediumPages[0].L1_writePolicy = AMMU.WritePolicy_WRITE_BACK;
        AMMU.mediumPages[0].L1_allocate    = AMMU.AllocatePolicy_ALLOCATE;
        AMMU.mediumPages[0].L1_posted = AMMU.PostedPolicy_POSTED;

        AMMU.mediumPages[1].pageEnabled = AMMU.Enable_YES;
        AMMU.mediumPages[1].logicalAddress = 0x00400000;
        AMMU.mediumPages[1].translatedAddress = 0x40400000;
        AMMU.mediumPages[1].translationEnabled = AMMU.Enable_YES;
        AMMU.mediumPages[1].size = AMMU.Medium_256K;
        AMMU.mediumPages[1].L1_cacheable = AMMU.CachePolicy_CACHEABLE;
        AMMU.mediumPages[1].L1_writePolicy = AMMU.WritePolicy_WRITE_BACK;
        AMMU.mediumPages[1].L1_allocate    = AMMU.AllocatePolicy_ALLOCATE;
        AMMU.mediumPages[1].L1_posted = AMMU.PostedPolicy_POSTED;


        /*********************** Large Pages *************************/
        /* Instruction Code: Large page  (512M); cacheable */
        AMMU.largePages[0].pageEnabled = AMMU.Enable_YES;
        /* TILER & DMM regions: Large page (512M); cacheable */
        AMMU.largePages[0].logicalAddress = 0x60000000;
        AMMU.largePages[0].translationEnabled = AMMU.Enable_NO;
        AMMU.largePages[0].size = AMMU.Large_512M;
        AMMU.largePages[0].L1_cacheable = AMMU.CachePolicy_NON_CACHEABLE;
        AMMU.largePages[0].L1_posted = AMMU.PostedPolicy_NON_POSTED;
        AMMU.largePages[0].L2_cacheable = AMMU.CachePolicy_NON_CACHEABLE;
        AMMU.largePages[0].L2_posted = AMMU.PostedPolicy_NON_POSTED;

        /* config large page[0] to map 512MB VA 0x40000000 to Config space */
        AMMU.largePages[1].pageEnabled = AMMU.Enable_YES;
        AMMU.largePages[1].logicalAddress = 0x40000000;
        AMMU.largePages[1].translationEnabled = AMMU.Enable_NO;
        AMMU.largePages[1].size = AMMU.Large_512M;
        AMMU.largePages[1].L1_cacheable = AMMU.CachePolicy_NON_CACHEABLE;
        AMMU.largePages[1].L1_posted = AMMU.PostedPolicy_NON_POSTED;
        AMMU.largePages[1].L2_cacheable = AMMU.CachePolicy_NON_CACHEABLE;
        AMMU.largePages[1].L2_posted = AMMU.PostedPolicy_NON_POSTED;

        /* V_M3/D_M3 code and data regions */
        /* config large page[1] to map 512MB VA 0x80000000 to DDR 0x80000000  - Non cached */
        AMMU.largePages[2].pageEnabled = AMMU.Enable_YES;
        AMMU.largePages[2].logicalAddress = 0x80000000;
        AMMU.largePages[2].translationEnabled = AMMU.Enable_NO;
        AMMU.largePages[2].size = AMMU.Large_512M;
        AMMU.largePages[2].volatileQualifier = AMMU.Volatile_FOLLOW;
        AMMU.largePages[2].L1_cacheable = AMMU.CachePolicy_CACHEABLE;
        AMMU.largePages[2].L1_posted = AMMU.PostedPolicy_POSTED;
        AMMU.largePages[2].L2_cacheable = AMMU.CachePolicy_NON_CACHEABLE;
        AMMU.largePages[2].L2_posted = AMMU.PostedPolicy_NON_POSTED;

        AMMU.largePages[3].pageEnabled = AMMU.Enable_YES;
        AMMU.largePages[3].logicalAddress = 0xC0000000;
        AMMU.largePages[3].translationEnabled = AMMU.Enable_NO;
        AMMU.largePages[3].size = AMMU.Large_512M;
        AMMU.largePages[3].L1_cacheable = AMMU.CachePolicy_NON_CACHEABLE;
        AMMU.largePages[3].L1_posted = AMMU.PostedPolicy_NON_POSTED;
        AMMU.largePages[3].L2_cacheable = AMMU.CachePolicy_NON_CACHEABLE;
        AMMU.largePages[3].L2_posted = AMMU.PostedPolicy_NON_POSTED;
    }

    if (Program.global.coreName.match("VPSS-M3"))
    {
        var GateDualCore = xdc.useModule('ti.sysbios.family.arm.ducati.GateDualCore');
        GateDualCore.initGates = true;
    }
}
