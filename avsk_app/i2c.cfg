/*******************************************************************************
 *                                                                             *
 * Copyright (c) 2011 Texas Instruments Incorporated - http://www.ti.com/      *
 *                        ALL RIGHTS RESERVED                                  *
 *                                                                             *
 ******************************************************************************/

/*
 *   @file  i2c.cfg
 *
 *   @brief 
 */
 
function init()
{
    /* Load the MMU cfg file                                                      */
    
    var Program = xdc.useModule('xdc.cfg.Program');
    
    if ( Program.build.cfgArgs.APP_ON_M3 == "0" )
    {
        xdc.loadCapsule("platforms/evmDM814x/mmu.cfg");
    }

    /* load the required files and packages                                       */
    var Task        = xdc.useModule("ti.sysbios.knl.Task");
    var BIOS        = xdc.useModule ("ti.sysbios.BIOS");
    var DriverTable = xdc.useModule("ti.sdo.io.DriverTable");
    var Startup     = xdc.useModule ("xdc.runtime.Startup");
    var System      = xdc.useModule("xdc.runtime.System");
    var SysStd      = xdc.useModule('xdc.runtime.SysStd');
    var cache       = xdc.useModule("ti.sysbios.hal.Cache");
    var Timestamp   = xdc.useModule("xdc.runtime.Timestamp");
    var Hwi         = xdc.useModule ('ti.sysbios.hal.Hwi');
    var Sem         = xdc.useModule("ti.sysbios.knl.Semaphore");
    var Edma        = xdc.loadPackage("ti.sdo.edma3.drv.sample");
    var GIO         = xdc.useModule('ti.sysbios.io.GIO');
    
    if ( Program.build.cfgArgs.APP_ON_M3 == "1" )
    {
        var HwiM3        = xdc.useModule ('ti.sysbios.family.arm.m3.Hwi');
        var Timer        = xdc.useModule ("ti.sysbios.timers.dmtimer.Timer");
        var GateDualCore = xdc.useModule ('ti.sysbios.family.arm.ducati.GateDualCore');
        var Intmux        = xdc.useModule ('ti.sysbios.family.arm.ducati.dm8148.IntMux');
    }

    var iomFxns = "I2c_IOMFXNS";
    var initFxn = "user_i2c_init";
    var deviceParams = "i2cParams";
    var deviceId = 2;

    GIO.addDeviceMeta("/i2c2", iomFxns, initFxn, deviceId, deviceParams);
}
